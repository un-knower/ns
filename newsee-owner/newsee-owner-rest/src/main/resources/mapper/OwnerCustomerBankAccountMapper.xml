<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.newsee.owner.dao.OwnerCustomerBankAccountMapper" >
  <resultMap id="BaseResultMap" type="com.newsee.owner.entity.OwnerCustomerBankAccount" >
    <id column="owner_bank_account_id" property="ownerBankAccountId" jdbcType="BIGINT" />
    <result column="owner_id" property="ownerId" jdbcType="BIGINT" />
    <result column="bank_name" property="bankName" jdbcType="VARCHAR" />
    <result column="bank_address" property="bankAddress" jdbcType="VARCHAR" />
    <result column="is_enable" property="isEnable" jdbcType="TINYINT" />
    <result column="account_name" property="accountName" jdbcType="VARCHAR" />
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="protocol_number" property="protocolNumber" jdbcType="VARCHAR" />
    <result column="collection_number" property="collectionNumber" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="is_deleted" property="isDeleted" jdbcType="TINYINT" />
    <result column="create_user_id" property="createUserId" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_user_id" property="updateUserId" jdbcType="BIGINT" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="sys_time" property="sysTime" jdbcType="TIMESTAMP" />
    <result column="create_user_name" property="createUserName" jdbcType="VARCHAR" />
    <result column="update_user_name" property="updateUserName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    owner_bank_account_id, owner_id, bank_name, bank_address, is_enable, account_name, 
    account, protocol_number, collection_number, remark, is_deleted, create_user_id, 
    create_time, update_user_id, update_time, sys_time, create_user_name, update_user_name
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from owner_customer_bank_account
    where owner_bank_account_id = #{ownerBankAccountId,jdbcType=BIGINT}
  </select>
  <select id="listBankByOwnerId" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from owner_customer_bank_account
    where is_deleted = false and
     owner_id = #{ownerId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from owner_customer_bank_account
    where owner_bank_account_id = #{ownerBankAccountId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.newsee.owner.entity.OwnerCustomerBankAccount" >
    insert into owner_customer_bank_account (owner_bank_account_id, owner_id, bank_name, 
      bank_address, is_enable, account_name, 
      account, protocol_number, collection_number, 
      remark, is_deleted, create_user_id, 
      create_time, update_user_id, update_time, 
      sys_time, create_user_name, update_user_name)
    values (#{ownerBankAccountId,jdbcType=BIGINT}, #{ownerId,jdbcType=BIGINT}, #{bankName,jdbcType=VARCHAR}, 
      #{bankAddress,jdbcType=VARCHAR}, #{isEnable,jdbcType=TINYINT}, #{accountName,jdbcType=VARCHAR}, 
      #{account,jdbcType=VARCHAR}, #{protocolNumber,jdbcType=VARCHAR}, #{collectionNumber,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{isDeleted,jdbcType=TINYINT}, #{createUserId,jdbcType=BIGINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateUserId,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{sysTime,jdbcType=TIMESTAMP}, #{createUserName,jdbcType=VARCHAR}, #{updateUserName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.newsee.owner.entity.OwnerCustomerBankAccount" >
    insert into owner_customer_bank_account
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="ownerBankAccountId != null" >
        owner_bank_account_id,
      </if>
      <if test="ownerId != null" >
        owner_id,
      </if>
      <if test="bankName != null" >
        bank_name,
      </if>
      <if test="bankAddress != null" >
        bank_address,
      </if>
      <if test="isEnable != null" >
        is_enable,
      </if>
      <if test="accountName != null" >
        account_name,
      </if>
      <if test="account != null" >
        account,
      </if>
      <if test="protocolNumber != null" >
        protocol_number,
      </if>
      <if test="collectionNumber != null" >
        collection_number,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="isDeleted != null" >
        is_deleted,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="updateUserId != null" >
        update_user_id,
      </if>
      <if test="createUserName != null" >
        create_user_name,
      </if>
	  <if test="updateUserName != null" >
        update_user_name,
	  </if>
        create_time,
        update_time,
        sys_time
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="ownerBankAccountId != null" >
        #{ownerBankAccountId,jdbcType=BIGINT},
      </if>
      <if test="ownerId != null" >
        #{ownerId,jdbcType=BIGINT},
      </if>
      <if test="bankName != null" >
        #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="bankAddress != null" >
        #{bankAddress,jdbcType=VARCHAR},
      </if>
      <if test="isEnable != null" >
        #{isEnable,jdbcType=TINYINT},
      </if>
      <if test="accountName != null" >
        #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="account != null" >
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="protocolNumber != null" >
        #{protocolNumber,jdbcType=VARCHAR},
      </if>
      <if test="collectionNumber != null" >
        #{collectionNumber,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null" >
        #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="updateUserId != null" >
        #{updateUserId,jdbcType=BIGINT},
      </if>
      <if test="createUserName != null" >
        #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="updateUserName != null" >
        #{updateUserName,jdbcType=VARCHAR},
      </if>
        NOW(),
        NOW(),
        NOW()
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.newsee.owner.entity.OwnerCustomerBankAccount" >
    update owner_customer_bank_account
    <set >
      <if test="ownerId != null" >
        owner_id = #{ownerId,jdbcType=BIGINT},
      </if>
      <if test="bankName != null" >
        bank_name = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="bankAddress != null" >
        bank_address = #{bankAddress,jdbcType=VARCHAR},
      </if>
      <if test="isEnable != null" >
        is_enable = #{isEnable,jdbcType=TINYINT},
      </if>
      <if test="accountName != null" >
        account_name = #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="account != null" >
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="protocolNumber != null" >
        protocol_number = #{protocolNumber,jdbcType=VARCHAR},
      </if>
      <if test="collectionNumber != null" >
        collection_number = #{collectionNumber,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null" >
        is_deleted = #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="updateUserId != null" >
        update_user_id = #{updateUserId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sysTime != null" >
        sys_time = #{sysTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserName != null" >
        update_user_name = #{updateUserName,jdbcType=VARCHAR},
      </if>
    </set>
    where owner_bank_account_id = #{ownerBankAccountId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.newsee.owner.entity.OwnerCustomerBankAccount" >
    update owner_customer_bank_account
    set owner_id = #{ownerId,jdbcType=BIGINT},
      bank_name = #{bankName,jdbcType=VARCHAR},
      bank_address = #{bankAddress,jdbcType=VARCHAR},
      is_enable = #{isEnable,jdbcType=TINYINT},
      account_name = #{accountName,jdbcType=VARCHAR},
      account = #{account,jdbcType=VARCHAR},
      protocol_number = #{protocolNumber,jdbcType=VARCHAR},
      collection_number = #{collectionNumber,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      is_deleted = #{isDeleted,jdbcType=TINYINT},
      update_user_id = #{updateUserId,jdbcType=BIGINT},
      update_user_name = #{updateUserName,jdbcType=VARCHAR},
      update_time = NOW(),
      sys_time = NOW()
    where owner_bank_account_id = #{ownerBankAccountId,jdbcType=BIGINT}
  </update>
  <update id="deleteBank" parameterType="java.util.Map" >
    update owner_customer_bank_account
    set 
      is_deleted = true,
      update_user_id = #{userId,jdbcType=BIGINT},
      update_user_name = #{userName,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      sys_time = #{sysTime,jdbcType=TIMESTAMP}
      where owner_id = #{ownerId,jdbcType=BIGINT}
      and owner_bank_account_id = #{ownerBankAccountId,jdbcType=BIGINT}
  </update>
  
  <update id="deleteBankByOwnerId" parameterType="java.util.Map" >
    update owner_customer_bank_account
    set 
      is_deleted = 1,
      update_user_id = #{updateUserId,jdbcType=BIGINT},
      update_user_name = #{updateUserName,jdbcType=VARCHAR},
      update_time = NOW()
    where owner_id in 
    <foreach collection="list" item="ownerId" open="(" separator="," close=")">
        #{ownerId,jdbcType=BIGINT}
    </foreach>
  </update>
</mapper>