<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.newsee.owner.dao.OwnerHousePublicAreaInfoMapper">
  <resultMap id="BaseResultMap" type="com.newsee.owner.entity.OwnerHousePublicAreaInfo">
    <id column="house_id" jdbcType="BIGINT" property="houseId" />
    <result column="public_area_no" jdbcType="VARCHAR" property="publicAreaNo" />
    <result column="public_area_short_name" jdbcType="VARCHAR" property="publicAreaShortName" />
    <result column="developer" jdbcType="BIGINT" property="developer" />
    <result column="builder" jdbcType="VARCHAR" property="builder" />
    <result column="start_work_time" jdbcType="DATE" property="startWorkTime" />
    <result column="complete_time" jdbcType="DATE" property="completeTime" />
    <result column="delivery_time" jdbcType="DATE" property="deliveryTime" />
    <result column="building_area" jdbcType="BIGINT" property="buildingArea" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_user_id" jdbcType="BIGINT" property="createUserId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user_id" jdbcType="BIGINT" property="updateUserId" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="sys_time" jdbcType="TIMESTAMP" property="sysTime" />
    <result column="create_user_name" property="createUserName" jdbcType="VARCHAR" />
    <result column="update_user_name" property="updateUserName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List">
    house_id, public_area_no, public_area_short_name, developer, builder, start_work_time, 
    complete_time, delivery_time, building_area, remark, create_user_id, create_time, 
    update_user_id, update_time,create_user_name, update_user_name
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from owner_house_public_area_info
    where house_id = #{houseId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from owner_house_public_area_info
    where house_id = #{houseId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.newsee.owner.entity.OwnerHousePublicAreaInfo">
    insert into owner_house_public_area_info (house_id, public_area_no, public_area_short_name, 
      developer, builder, start_work_time, 
      complete_time, delivery_time, building_area, 
      remark, create_user_id, create_time, 
      update_user_id, update_time, sys_time,create_user_name, update_user_name
      )
    values (#{houseId,jdbcType=BIGINT}, #{publicAreaNo,jdbcType=VARCHAR}, #{publicAreaShortName,jdbcType=VARCHAR}, 
      #{developer,jdbcType=BIGINT}, #{builder,jdbcType=VARCHAR}, #{startWorkTime,jdbcType=DATE}, 
      #{completeTime,jdbcType=DATE}, #{deliveryTime,jdbcType=DATE}, #{buildingArea,jdbcType=BIGINT}, 
      #{remark,jdbcType=VARCHAR}, #{createUserId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateUserId,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP}, #{sysTime,jdbcType=TIMESTAMP},
      #{createUserName,jdbcType=VARCHAR}, #{updateUserName,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.newsee.owner.entity.OwnerHousePublicAreaInfo">
    insert into owner_house_public_area_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="houseId != null">
        house_id,
      </if>
      <if test="publicAreaNo != null">
        public_area_no,
      </if>
      <if test="publicAreaShortName != null">
        public_area_short_name,
      </if>
      <if test="developer != null">
        developer,
      </if>
      <if test="builder != null">
        builder,
      </if>
      <if test="startWorkTime != null">
        start_work_time,
      </if>
      <if test="completeTime != null">
        complete_time,
      </if>
      <if test="deliveryTime != null">
        delivery_time,
      </if>
      <if test="buildingArea != null">
        building_area,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="updateUserId != null">
        update_user_id,
      </if>
      <if test="createUserName != null" >
        create_user_name,
      </if>
      <if test="updateUserName != null" >
        update_user_name,
      </if>
        create_time,
        update_time,
        sys_time
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="houseId != null">
        #{houseId,jdbcType=BIGINT},
      </if>
      <if test="publicAreaNo != null">
        #{publicAreaNo,jdbcType=VARCHAR},
      </if>
      <if test="publicAreaShortName != null">
        #{publicAreaShortName,jdbcType=VARCHAR},
      </if>
      <if test="developer != null">
        #{developer,jdbcType=BIGINT},
      </if>
      <if test="builder != null">
        #{builder,jdbcType=VARCHAR},
      </if>
      <if test="startWorkTime != null">
        #{startWorkTime,jdbcType=DATE},
      </if>
      <if test="completeTime != null">
        #{completeTime,jdbcType=DATE},
      </if>
      <if test="deliveryTime != null">
        #{deliveryTime,jdbcType=DATE},
      </if>
      <if test="buildingArea != null">
        #{buildingArea,jdbcType=BIGINT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=BIGINT},
      </if>

      <if test="updateUserId != null">
        #{updateUserId,jdbcType=BIGINT},
      </if>
      <if test="createUserName != null" >
        #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="updateUserName != null" >
        #{updateUserName,jdbcType=VARCHAR},
      </if>
        NOW(),
        NOW(),
        NOW()
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.newsee.owner.entity.OwnerHousePublicAreaInfo">
    update owner_house_public_area_info
    <set>
      <if test="publicAreaNo != null">
        public_area_no = #{publicAreaNo,jdbcType=VARCHAR},
      </if>
      <if test="publicAreaShortName != null">
        public_area_short_name = #{publicAreaShortName,jdbcType=VARCHAR},
      </if>
      <if test="developer != null">
        developer = #{developer,jdbcType=BIGINT},
      </if>
      <if test="builder != null">
        builder = #{builder,jdbcType=VARCHAR},
      </if>
      <if test="startWorkTime != null">
        start_work_time = #{startWorkTime,jdbcType=DATE},
      </if>
      <if test="completeTime != null">
        complete_time = #{completeTime,jdbcType=DATE},
      </if>
      <if test="deliveryTime != null">
        delivery_time = #{deliveryTime,jdbcType=DATE},
      </if>
      <if test="buildingArea != null">
        building_area = #{buildingArea,jdbcType=BIGINT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="updateUserId != null">
        update_user_id = #{updateUserId,jdbcType=BIGINT},
      </if>
      <if test="updateUserName != null" >
        update_user_name = #{updateUserName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sysTime != null">
        sys_time = #{sysTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where house_id = #{houseId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.newsee.owner.entity.OwnerHousePublicAreaInfo">
    update owner_house_public_area_info
    set public_area_no = #{publicAreaNo,jdbcType=VARCHAR},
      public_area_short_name = #{publicAreaShortName,jdbcType=VARCHAR},
      developer = #{developer,jdbcType=BIGINT},
      builder = #{builder,jdbcType=VARCHAR},
      start_work_time = #{startWorkTime,jdbcType=DATE},
      complete_time = #{completeTime,jdbcType=DATE},
      delivery_time = #{deliveryTime,jdbcType=DATE},
      building_area = #{buildingArea,jdbcType=BIGINT},
      remark = #{remark,jdbcType=VARCHAR},
      update_user_id = #{updateUserId,jdbcType=BIGINT},
      update_user_name = #{updateUserName,jdbcType=VARCHAR},
      update_time = NOW(),
      sys_time = NOW()
    where house_id = #{houseId,jdbcType=BIGINT}
  </update>
  <select id="loadHouseByShortName" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select 
        info.house_id, info.public_area_no, info.public_area_short_name, info.developer, info.builder, info.start_work_time, 
        info.complete_time, info.delivery_time, info.building_area, info.remark, info.create_user_id, info.create_time, 
        info.update_user_id, info.update_time
    from owner_house_public_area_info info
    inner join owner_house_base_info base on base.house_id = info.house_id
    <where>
        base.enterprise_id = #{enterpriseId,jdbcType=BIGINT} and info.public_area_short_name = #{shortName,jdbcType=VARCHAR}
        <if test="precinctId != null and precinctId != 0">
           and base.precinct_id = #{precinctId,jdbcType=BIGINT} 
        </if>
        <if test="houseId != null">
           and base.house_id != #{houseId,jdbcType=BIGINT}
        </if>
         AND base.is_deleted=FALSE AND base.edit_status = 0 and base.is_block_up = false
    </where> 
  </select>
  <select id="loadHouseByNo" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select 
	    info.house_id, info.public_area_no, info.public_area_short_name, info.developer, info.builder, info.start_work_time, 
	    info.complete_time, info.delivery_time, info.building_area, info.remark, info.create_user_id, info.create_time, 
	    info.update_user_id, info.update_time
    from owner_house_public_area_info info
    inner join owner_house_base_info base on base.house_id = info.house_id
    <where>
        base.enterprise_id = #{enterpriseId,jdbcType=BIGINT} and info.public_area_no = #{no,jdbcType=VARCHAR}
        <if test="houseId != null">
           and base.house_id != #{houseId,jdbcType=BIGINT}
        </if>
         AND base.is_deleted=FALSE AND base.edit_status = 0 and base.is_block_up = false
    </where> 
  </select>
  
  <!-- 获取公共区域信息 -->
  <select id="selectPublicAreaInfoList" parameterType="java.util.List" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from owner_house_public_area_info
    where house_id IN 
    <foreach collection="list" item="item" separator="," open="(" close=")">
	     #{item,jdbcType=BIGINT}
    </foreach>
  </select>
  
</mapper>
