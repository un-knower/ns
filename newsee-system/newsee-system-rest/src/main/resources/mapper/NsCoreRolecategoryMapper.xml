<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.newsee.system.dao.NsCoreRolecategoryMapper" >
  <resultMap id="BaseResultMap" type="com.newsee.system.entity.NsCoreRolecategory" >
    <id column="rolecategory_id" property="rolecategoryId" jdbcType="BIGINT" />
    <result column="enterprise_id" property="enterpriseId" jdbcType="BIGINT" />
    <result column="organization_id" property="organizationId" jdbcType="BIGINT" />
    <result column="rolecategory_name" property="rolecategoryName" jdbcType="VARCHAR" />
    <result column="is_deleted" property="isDeleted" jdbcType="TINYINT" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="create_user_id" property="createUserId" jdbcType="BIGINT" />
    <result column="create_user_name" property="createUserName" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_user_id" property="updateUserId" jdbcType="BIGINT" />
    <result column="update_user_name" property="updateUserName" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    rolecategory_id, enterprise_id, organization_id, rolecategory_name, is_deleted, remark, 
    create_user_id, create_user_name, create_time, update_user_id, update_user_name, 
    update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from ns_core_rolecategory
    where rolecategory_id = #{rolecategoryId,jdbcType=BIGINT}
  </select>
  <select id="listByOrganizationId" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from ns_core_rolecategory
    where 
        is_deleted = 0
     and
        organization_id = #{organizationId,jdbcType=BIGINT}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from ns_core_rolecategory
    where rolecategory_id = #{rolecategoryId,jdbcType=BIGINT}
  </delete>
  <update id="deleteSoftById" parameterType="java.lang.Long" >
    update 
        ns_core_rolecategory
    set
        is_deleted = 1
    where 
        rolecategory_id = #{rolecategoryId,jdbcType=BIGINT}
  </update>
  <insert id="insert" parameterType="com.newsee.system.entity.NsCoreRolecategory" >
    insert into ns_core_rolecategory (rolecategory_id, enterprise_id, organization_id, 
      rolecategory_name, is_deleted, remark, 
      create_user_id, create_user_name, create_time, 
      update_user_id, update_user_name, update_time
      )
    values (#{rolecategoryId,jdbcType=BIGINT}, #{enterpriseId,jdbcType=BIGINT}, #{organizationId,jdbcType=BIGINT}, 
      #{rolecategoryName,jdbcType=VARCHAR}, #{isDeleted,jdbcType=TINYINT}, #{remark,jdbcType=VARCHAR}, 
      #{createUserId,jdbcType=BIGINT}, #{createUserName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateUserId,jdbcType=BIGINT}, #{updateUserName,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.newsee.system.entity.NsCoreRolecategory" >
    <selectKey resultType="java.lang.Long" keyProperty="rolecategoryId"
            order="AFTER">
       SELECT
       LAST_INSERT_ID()
     </selectKey>
    insert into ns_core_rolecategory
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="enterpriseId != null" >
        enterprise_id,
      </if>
      <if test="organizationId != null" >
        organization_id,
      </if>
      <if test="rolecategoryName != null" >
        rolecategory_name,
      </if>
      <if test="isDeleted != null" >
        is_deleted,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="createUserName != null" >
        create_user_name,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateUserId != null" >
        update_user_id,
      </if>
      <if test="updateUserName != null" >
        update_user_name,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="enterpriseId != null" >
        #{enterpriseId,jdbcType=BIGINT},
      </if>
      <if test="organizationId != null" >
        #{organizationId,jdbcType=BIGINT},
      </if>
      <if test="rolecategoryName != null" >
        #{rolecategoryName,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null" >
        #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="createUserName != null" >
        #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null" >
        #{updateUserId,jdbcType=BIGINT},
      </if>
      <if test="updateUserName != null" >
        #{updateUserName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.newsee.system.entity.NsCoreRolecategory" >
    update ns_core_rolecategory
    <set >
      <if test="enterpriseId != null" >
        enterprise_id = #{enterpriseId,jdbcType=BIGINT},
      </if>
      <if test="organizationId != null" >
        organization_id = #{organizationId,jdbcType=BIGINT},
      </if>
      <if test="rolecategoryName != null" >
        rolecategory_name = #{rolecategoryName,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null" >
        is_deleted = #{isDeleted,jdbcType=TINYINT},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="createUserName != null" >
        create_user_name = #{createUserName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null" >
        update_user_id = #{updateUserId,jdbcType=BIGINT},
      </if>
      <if test="updateUserName != null" >
        update_user_name = #{updateUserName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where rolecategory_id = #{rolecategoryId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.newsee.system.entity.NsCoreRolecategory" >
    update ns_core_rolecategory
    set enterprise_id = #{enterpriseId,jdbcType=BIGINT},
      organization_id = #{organizationId,jdbcType=BIGINT},
      rolecategory_name = #{rolecategoryName,jdbcType=VARCHAR},
      is_deleted = #{isDeleted,jdbcType=TINYINT},
      remark = #{remark,jdbcType=VARCHAR},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      create_user_name = #{createUserName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user_id = #{updateUserId,jdbcType=BIGINT},
      update_user_name = #{updateUserName,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where rolecategory_id = #{rolecategoryId,jdbcType=BIGINT}
  </update>
</mapper>