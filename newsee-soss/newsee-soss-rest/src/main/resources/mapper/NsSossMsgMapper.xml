<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.newsee.soss.dao.NsSossMsgMapper">

	<resultMap id="NsSossMsgResultMap" type="com.newsee.soss.entity.NsSossMsg">
			<id property="id" column="id" jdbcType="BIGINT"/>
			<result property="enterpriseId" column="enterpriseID" jdbcType="BIGINT"/>
			<result property="msgType" column="msgType" jdbcType="VARCHAR"/>
			<result property="msgCode" column="msgCode" jdbcType="VARCHAR"/>
			<result property="remark" column="remark" jdbcType="VARCHAR"/>
			<result property="sendType" column="sendType" jdbcType="VARCHAR"/>
			<result property="createTime" column="createTime" jdbcType="TIMESTAMP"/>
			<result property="updateTime" column="updateTime" jdbcType="TIMESTAMP"/>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="NsSossMsg_Column_List">
		id,enterpriseID,msgType,msgCode,remark,sendType,createTime,updateTime
	</sql>
	
	<select id="listPage" parameterType="com.newsee.common.vo.SearchVo" resultMap="NsSossMsgResultMap">
	    select 
	        <include refid="NsSossMsg_Column_List"  /> 
	    from 
	       ns_soss_msg 
	    <where>
	        <if test="enterpriseId != null">
                AND enterpriseID = #{enterpriseId,jdbcType=BIGINT}
            </if>
	        <if test="mainSearch != null and mainSearch != ''">
	            and remark like CONCAT("%",#{mainSearch,jdbcType=VARCHAR},"%")
	        </if>
	        <if test="enterpriseId != null">
	            and enterprise_id = #{enterpriseId,jdbcType=BIGINT}
	        </if>
	        <if test="organizationId != null">
	            and organization_id = #{organizationId,jdbcType=BIGINT}
	        </if>
	        <if test="filterList != null">
	            <foreach collection="filterList" item="item">
	               <choose>
	                   <when test="item.comparison != null and item.comparison == 'NULL'">
	                       and (#{item.fieldUnderLineName} IS NULL or #{item.fieldUnderLineName} = '')
	                   </when>
	                   <when test="item.comparison != null and item.comparison == 'NOT_NULL'">
	                       and (#{item.fieldUnderLineName} IS NOT NULL or #{item.fieldUnderLineName} != '')
	                   </when>
	                   <when test="item.comparison != null and item.comparison == 'NOT_LIKE'">
	                       and LOCATE(#{item.fieldValue}, #{item.fieldUnderLineName})=0 
	                   </when>
	                   <when test="item.comparison != null and item.comparison == 'LIKE'">
	                       and LOCATE(#{item.fieldValue}, #{item.fieldUnderLineName})>0
	                   </when>
	                   <when test="item.comparison != null and item.comparison == 'GREATER_THAN'">
	                       and ${item.fieldName} &gt; #{item.fieldValue}
	                   </when>
	                   <when test="item.comparison != null and item.comparison == 'LESS_THAN'">
	                       and ${item.fieldName} &lt; #{item.fieldValue}
	                   </when>
	                   <when test="item.comparison != null and item.comparison == 'EQUAL'">
	                       and  ${item.fieldName}= #{item.fieldValue}
	                   </when>
	                   <when test="item.comparison != null and item.comparison == 'NOT_EQUAL'">
	                       and ${item.fieldName} != #{item.fieldValue}
	                   </when>
	                   <when test="item.comparison != null and item.comparison == 'GREATER_EQUAL_THAN'">
	                       and ${item.fieldName} &gt;= #{item.fieldValue}               
	                   </when>
	                   <when test="item.comparison != null and item.comparison == 'LESS_EQUAL_THAN'">
	                       and ${item.fieldName} &lt;= #{item.fieldValue}
	                   </when>
	               </choose>
	            </foreach>
	        </if>
	
	        <if test="orderFieldUnderLineName != null and orderFieldUnderLineName != ''">
	           order by ${orderFieldUnderLineName}
	           <if test="orderBy != null and orderBy != ''">
	              ${orderBy}
	           </if>
	        </if>
	    </where>
	  </select>
	
	<select id="selectById" parameterType="java.lang.Long" resultMap="NsSossMsgResultMap">
		select
			<include refid="NsSossMsg_Column_List" />
		from
			ns_soss_msg
		where
			id = #{id}
	</select>
	
	<update id="updateById" parameterType="com.newsee.soss.entity.NsSossMsg">
		update ns_soss_msg
		<set>
			<if test="enterpriseId != null">
			  enterpriseID = #{enterpriseId, jdbcType=BIGINT },
			</if>
			<if test="msgType != null">
			  msgType = #{msgType, jdbcType=VARCHAR },
			</if>
			<if test="msgCode != null">
			  msgCode = #{msgCode, jdbcType=VARCHAR},
			</if>
			<if test="remark != null">
			  remark = #{remark, jdbcType=VARCHAR },
			</if>
			<if test="sendType != null">
			  sendType = #{sendType, jdbcType=VARCHAR },
			</if>
			<if test="createTime != null">
			  createTime = #{createTime, jdbcType=TIMESTAMP },
			</if>
			  updateTime = now(),			 
		</set>
		where
			id = #{id}
	</update>
	
	<delete id="deleteById" parameterType="java.lang.Long">
		delete from ns_soss_msg 
		where
			id = #{id}
	</delete>
	
	<delete id="deleteBatch" parameterType="java.util.List">
		delete from ns_soss_msg
		where
			id in
		<foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
	   		${item}
        </foreach>
	</delete>
	
	<insert id="insert" useGeneratedKeys="true" keyProperty="id"
		parameterType="com.newsee.soss.entity.NsSossMsg">
		insert into ns_soss_msg
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="enterpriseId != null">
				enterpriseID,
			</if>
			<if test="msgType != null">
				msgType,
			</if>
			<if test="msgCode != null and msgCode != ''">
              msgCode,
            </if>
			<if test="remark != null">
				remark,
			</if>
			<if test="sendType != null">
				sendType,
			</if>
				createTime,
				updateTime,
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="enterpriseId != null">
				#{enterpriseId, jdbcType=BIGINT},
			</if>
			<if test="msgType != null">
				#{msgType, jdbcType=VARCHAR},
			</if>
			<if test="msgCode != null and msgCode != ''">
              #{msgCode, jdbcType=VARCHAR},
            </if>
			<if test="remark != null">
				#{remark, jdbcType=VARCHAR},
			</if>
			<if test="sendType != null">
				#{sendType, jdbcType=VARCHAR},
			</if>
			now(),
			now(),
		</trim>
	</insert>
	
	<insert id="insertBatch" parameterType="java.util.List">
		insert into ns_soss_msg
		<trim prefix="(" suffix=")" suffixOverrides=",">
			enterpriseID,
			msgType,
			msgCode,
			remark,
			sendType,
			createTime,
			updateTime,
		</trim>
		values
		<foreach collection="list" item="item" index="index" separator=",">
		(
			#{item.enterpriseId, jdbcType=BIGINT},
			#{item.msgType, jdbcType=VARCHAR},
			#{item.msgCode, jdbcType=VARCHAR},
			#{item.remark, jdbcType=VARCHAR},
			#{item.sendType, jdbcType=VARCHAR},
			#{item.createTime, jdbcType=TIMESTAMP},
			#{item.updateTime, jdbcType=TIMESTAMP},
        )
        </foreach>
	</insert>
	
</mapper>