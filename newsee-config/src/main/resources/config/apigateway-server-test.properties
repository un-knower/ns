# ===================================================================
# zuul智能路由配置
# ===================================================================
#所有服务不自动创建路由规则（默认情况下zuul会为eureka中的每个服务自动创建一个默认路由规则）
#zuul.ignored-services=*
#以/owner/开头的请求都指向owner-server
zuul.routes.owner-server.path=/owner/**
zuul.routes.owner-server.serviceId=owner-server


#add webSocket service route
zuul.routes.websocket-server.path=/websocket/**
zuul.routes.websocket-server.serviceId=websocket-server

zuul.routes.oauth-server.path=/oauth/**
zuul.routes.oauth-server.serviceId=oauth-server


zuul.routes.bill-server.path=/bill/**
zuul.routes.bill-server.serviceId=bill-server


zuul.routes.log-server.path=/log/**
zuul.routes.log-server.serviceId=log-server

zuul.routes.system-server.path=/system/**
zuul.routes.system-server.serviceId=system-server

#zuul.routes.custom-form-server.path=/custom/**
#zuul.routes.custom-form-server.serviceId=custom-form-server

zuul.routes.fastdfs-server.path=/fastdfs/**
zuul.routes.fastdfs-server.serviceId=fastdfs-server

zuul.routes.dev-platform-server.path=/jepf/**
zuul.routes.dev-platform-server.serviceId=dev-platform-server

zuul.routes.soss-server.path=/soss/**
zuul.routes.soss-server.serviceId=soss-server

zuul.routes.charge-server.path=/charge/**
zuul.routes.charge-server.serviceId=charge-server

#简单的配置方式(等同于上面的配置)
#zuul.routes.log-server=/log/**
#zuul.routes.owner-rest=/owner/**
#不希望某个接口被路由，如接口:/hello
#zuul.ignored-patterns=/**/hello/**
#为所有路由规则添加统一前缀(注意避免不要让路由表达式的起始字符与zuul.prefix的参数相同，否则会有bug)
#zuul.prefix=/api
#zuul默认情况下会过滤到http请求头中的一些敏感信息，如：cookie;若要传递cookie,需要设置以下参数
#方法一:对指定路由开启自定义敏感头
zuul.routes.owner-server.customSensitiveHeaders=true
#方法二:对指定路由的敏感头设置为空
#zuul.routes.<router>.sensitiveHeaders=

# ===================================================================
# 服务多实例负载均衡配置
# ===================================================================
#是否从eureka服务中心获取服务的实例清单
#ribbon.eureka.enabled=false
#businesslog-server服务有三个实例
#businesslog-server.ribbon.listOfServers=http://192.168.1.100:8080,http://192.168.1.101:8080,http://192.168.1.102:8080 


# ===================================================================
# 禁用某个过滤器
# ===================================================================
#zuul.过滤器类名.过滤器类型.disable=true

zuul.host.socket-timeout-millis=200000
zuul.host.connect-timeout-millis=200000

# ===================================================================
# 服务监控中心配置
# ===================================================================
spring.boot.admin.client.enabled=true
spring.boot.admin.client.name=apigateway-server
spring.boot.admin.url=http://192.168.1.210:8090
spring.boot.admin.client.prefer-ip=true
spring.boot.admin.client.service-url=http://192.168.1.210:7777
#spring.boot.admin.client.health-url=http://192.168.1.154:7777

info.version=1.0.0
info.app.name="@project.name@"
info.app.description="apigateway add by huqianliang 20170817"
info.app.version="@project.version@"
info.app.spring-boot-version="@project.parent.version@"

management.security.enabled=false

# ===================================================================
# redis配置
# ===================================================================
spring.redis.host=192.168.1.210
spring.redis.port=6379
spring.redis.timeout=15000