# ===================================================================
# 数据源配置
# ===================================================================
mybatis.configLocation=classpath:mybatis-config.xml
mybatis.mapperLocations=classpath:/mapper/*.xml

mysql.datasource.type=com.alibaba.druid.pool.DruidDataSource
mysql.datasource.readSize=1
mysql.datasource.configLocation=classpath:mybatis-config.xml
mysql.datasource.mapperLocations=classpath:/mapper/*.xml

#=========================================DB00(默认库)
#Write
#mysql.datasource.write.type=com.alibaba.druid.pool.DruidDataSource
mysql.datasource.DB00write.driver-class-name=com.mysql.jdbc.Driver
mysql.datasource.DB00write.url=jdbc:mysql://192.168.1.157:3307/newsee-owner?allowMultiQueries=true&useUnicode=true&characterEncoding=utf-8
mysql.datasource.DB00write.username=root
mysql.datasource.DB00write.password=newsee888
# 初始化大小，最小，最大
mysql.datasource.DB00write.initialSize=5
mysql.datasource.DB00write.minIdle=5
mysql.datasource.DB00write.maxActive=20
# 配置获取连接等待超时的时间
mysql.datasource.DB00write.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
mysql.datasource.DB00write.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
mysql.datasource.DB00write.minEvictableIdleTimeMillis=300000
mysql.datasource.DB00write.validationQuery=SELECT 1 FROM DUAL
mysql.datasource.DB00write.testWhileIdle=true
mysql.datasource.DB00write.testOnBorrow=false
mysql.datasource.DB00write.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
mysql.datasource.DB00write.poolPreparedStatements=true
mysql.datasource.DB00write.maxPoolPreparedStatementPerConnectionSize=20

#read01
#mysql.datasource.read1.type=com.alibaba.druid.pool.DruidDataSource
mysql.datasource.DB00read01.driver-class-name=com.mysql.jdbc.Driver
mysql.datasource.DB00read01.url=jdbc:mysql://192.168.1.157:3308/newsee-owner?allowMultiQueries=true&useUnicode=true&characterEncoding=utf-8
mysql.datasource.DB00read01.username=root
mysql.datasource.DB00read01.password=newsee888
mysql.datasource.DB00read01.initialSize=5
mysql.datasource.DB00read01.minIdle=5
mysql.datasource.DB00read01.maxActive=20
# 配置获取连接等待超时的时间
mysql.datasource.DB00read01.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
mysql.datasource.DB00read01.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
mysql.datasource.DB00read01.minEvictableIdleTimeMillis=300000
mysql.datasource.DB00read01.validationQuery=SELECT 1 FROM DUAL
mysql.datasource.DB00read01.testWhileIdle=true
mysql.datasource.DB00read01.testOnBorrow=false
mysql.datasource.DB00read01.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
mysql.datasource.DB00read01.poolPreparedStatements=true
mysql.datasource.DB00read01.maxPoolPreparedStatementPerConnectionSize=20

# 监控系统配置
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
mysql.datasource.DB00write.filters=stat,wall,logback
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
mysql.datasource.DB00write.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
mysql.datasource.DB00write.useGlobalDataSourceStat=true

# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
mysql.datasource.DB00read01.filters=stat,wall,logback
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
mysql.datasource.DB00read01.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
mysql.datasource.DB00read01.useGlobalDataSourceStat=true


#=========================================DB01
#mysql.datasource.write.type=com.alibaba.druid.pool.DruidDataSource
mysql.datasource.DB01write.driver-class-name=com.mysql.jdbc.Driver
mysql.datasource.DB01write.url=jdbc:mysql://192.168.1.149:3307/newsee-owner?allowMultiQueries=true&useUnicode=true&characterEncoding=utf-8
mysql.datasource.DB01write.username=root
mysql.datasource.DB01write.password=newsee888

# 初始化大小，最小，最大
mysql.datasource.DB01write.initialSize=5
mysql.datasource.DB01write.minIdle=5
mysql.datasource.DB01write.maxActive=20
# 配置获取连接等待超时的时间
mysql.datasource.DB01write.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
mysql.datasource.DB01write.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
mysql.datasource.DB01write.minEvictableIdleTimeMillis=300000
mysql.datasource.DB01write.validationQuery=SELECT 1 FROM DUAL
mysql.datasource.DB01write.testWhileIdle=true
mysql.datasource.DB01write.testOnBorrow=false
mysql.datasource.DB01write.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
mysql.datasource.DB01write.poolPreparedStatements=true
mysql.datasource.DB01write.maxPoolPreparedStatementPerConnectionSize=20

#read01
#mysql.datasource.read1.type=com.alibaba.druid.pool.DruidDataSource
mysql.datasource.DB01read01.driver-class-name=com.mysql.jdbc.Driver
mysql.datasource.DB01read01.url=jdbc:mysql://192.168.1.149:3308/newsee-owner?allowMultiQueries=true&useUnicode=true&characterEncoding=utf-8
mysql.datasource.DB01read01.username=root
mysql.datasource.DB01read01.password=newsee888
mysql.datasource.DB01read01.initialSize=5
mysql.datasource.DB01read01.minIdle=5
mysql.datasource.DB01read01.maxActive=20
# 配置获取连接等待超时的时间
mysql.datasource.DB01read01.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
mysql.datasource.DB01read01.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
mysql.datasource.DB01read01.minEvictableIdleTimeMillis=300000
mysql.datasource.DB01read01.validationQuery=SELECT 1 FROM DUAL
mysql.datasource.DB01read01.testWhileIdle=true
mysql.datasource.DB01read01.testOnBorrow=false
mysql.datasource.DB01read01.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
mysql.datasource.DB01read01.poolPreparedStatements=true
mysql.datasource.DB01read01.maxPoolPreparedStatementPerConnectionSize=20


#监控系统配置
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
mysql.datasource.DB01read01.filters=stat,wall,logback
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
mysql.datasource.DB01read01.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
mysql.datasource.DB01read01.useGlobalDataSourceStat=true

# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
mysql.datasource.DB01read01.filters=stat,wall,logback
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
mysql.datasource.DB01read01.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
mysql.datasource.DB01read01.useGlobalDataSourceStat=true



#=========================================DB02
#mysql.datasource.write.type=com.alibaba.druid.pool.DruidDataSource
mysql.datasource.DB02write.driver-class-name=com.mysql.jdbc.Driver
mysql.datasource.DB02write.url=jdbc:mysql://192.168.1.187:3307/newsee-owner?allowMultiQueries=true&useUnicode=true&characterEncoding=utf-8
mysql.datasource.DB02write.username=root
mysql.datasource.DB02write.password=newsee888

# 初始化大小，最小，最大
mysql.datasource.DB02write.initialSize=5
mysql.datasource.DB02write.minIdle=5
mysql.datasource.DB02write.maxActive=20
# 配置获取连接等待超时的时间
mysql.datasource.DB02write.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
mysql.datasource.DB02write.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
mysql.datasource.DB02write.minEvictableIdleTimeMillis=300000
mysql.datasource.DB02write.validationQuery=SELECT 1 FROM DUAL
mysql.datasource.DB02write.testWhileIdle=true
mysql.datasource.DB02write.testOnBorrow=false
mysql.datasource.DB02write.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
mysql.datasource.DB02write.poolPreparedStatements=true
mysql.datasource.DB02write.maxPoolPreparedStatementPerConnectionSize=20

#read01
#mysql.datasource.read1.type=com.alibaba.druid.pool.DruidDataSource
mysql.datasource.DB02read01.driver-class-name=com.mysql.jdbc.Driver
mysql.datasource.DB02read01.url=jdbc:mysql://192.168.1.187:3308/newsee-owner?allowMultiQueries=true&useUnicode=true&characterEncoding=utf-8
mysql.datasource.DB02read01.username=root
mysql.datasource.DB02read01.password=newsee888
mysql.datasource.DB02read01.initialSize=5
mysql.datasource.DB02read01.minIdle=5
mysql.datasource.DB02read01.maxActive=20
# 配置获取连接等待超时的时间
mysql.datasource.DB02read01.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
mysql.datasource.DB02read01.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
mysql.datasource.DB02read01.minEvictableIdleTimeMillis=300000
mysql.datasource.DB02read01.validationQuery=SELECT 1 FROM DUAL
mysql.datasource.DB02read01.testWhileIdle=true
mysql.datasource.DB02read01.testOnBorrow=false
mysql.datasource.DB02read01.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
mysql.datasource.DB02read01.poolPreparedStatements=true
mysql.datasource.DB02read01.maxPoolPreparedStatementPerConnectionSize=20


#监控系统配置
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
mysql.datasource.DB02read01.filters=stat,wall,logback
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
mysql.datasource.DB02read01.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
mysql.datasource.DB02read01.useGlobalDataSourceStat=true

# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
mysql.datasource.DB02read01.filters=stat,wall,logback
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
mysql.datasource.DB02read01.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
mysql.datasource.DB02read01.useGlobalDataSourceStat=true

# ===================================================================
# redis配置
# ===================================================================
spring.redis.host=192.168.1.207
spring.redis.port=6379
spring.redis.timeout=15000



# ===================================================================
# 服务监控中心配置
# ===================================================================
spring.boot.admin.client.enabled=true
spring.boot.admin.client.name=owner-server
spring.boot.admin.url=http://192.168.1.23:8090
spring.boot.admin.client.prefer-ip=true
spring.boot.admin.client.service-url=http://192.168.1.29:8773
#spring.boot.admin.client.health-url=http://192.168.1.154:8773

info.app.name="@project.name@"
info.app.description="owner-server add by huqianliang 20170811"
info.app.version="@project.version@"
info.app.spring-boot-version="@project.parent.version@"

# ===================================================================
# 分布式文件系统FDFS配置
# ===================================================================
fdfs.soTimeout=1501
fdfs.connectTimeout=601
#缩略图生成参数
fdfs.thumbImage.height=1501
fdfs.thumbImage.width=1501
#TrackerList参数,支持多个
fdfs.trackerList[0]=192.168.1.200:12050

# ===================================================================
# 开启消息跟踪
# ===================================================================
spring.cloud.bus.trace.enabled=true
spring.cloud.bus.refresh.enabled=true
management.security.enabled=false


# ===================================================================
# rabbit服务登录配置
# ===================================================================
spring.rabbitmq.addresses=192.168.1.192:5672
spring.rabbitmq.username=test
spring.rabbitmq.password=test

# ===================================================================
# spring boot admin 读取日志文件
# ===================================================================
logging.file=../logs/newsee-owner_all.log

# ===================================================================
# 测试配置自动刷新
# ===================================================================
admin.name=testcode


spring.data.mongodb.repositories.enabled=true 
spring.data.mongodb.uri=mongodb://192.168.1.32:27017/newsee-system

# ===================================================================
# 业务配置
# ===================================================================
#房产树初始展示层级 -1无控制 
showHouseLevel=2

#spring.jackson.time-zone=GMT+8
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
