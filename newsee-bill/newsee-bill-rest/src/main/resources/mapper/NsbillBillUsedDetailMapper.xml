<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.newsee.bill.dao.NsbillBillUsedDetailMapper">

	<resultMap id="NsbillBillUsedDetailResultMap" type="com.newsee.bill.entity.NsbillBillUsedDetail">
			<id property="id" column="Id" jdbcType="BIGINT"/>
			<result property="billUsedId" column="BillUsedId" jdbcType="BIGINT"/>
			<result property="subjectCode" column="SubjectCode" jdbcType="VARCHAR"/>
			<result property="content" column="Content" jdbcType="VARCHAR"/>
			<result property="chargeItemId" column="ChargeItemId" jdbcType="BIGINT"/>
			<result property="businessId" column="BusinessId" jdbcType="BIGINT"/>
			<result property="amount" column="Amount" jdbcType="DECIMAL"/>
			<result property="price" column="Price" jdbcType="DECIMAL"/>
			<result property="billFund" column="BillFund" jdbcType="DECIMAL"/>
			<result property="remark" column="Remark" jdbcType="VARCHAR"/>
			<result property="oldId" column="OldId" jdbcType="BIGINT"/>
			<result property="beginDate" column="BeginDate" jdbcType="TIMESTAMP"/>
			<result property="endDate" column="EndDate" jdbcType="TIMESTAMP"/>
			<result property="chargeId" column="ChargeId" jdbcType="BIGINT"/>
			<result property="customerId" column="CustomerId" jdbcType="BIGINT"/>
			<result property="discount" column="Discount" jdbcType="DECIMAL"/>
			<result property="houseId" column="HouseId" jdbcType="BIGINT"/>
			<result property="manualAutoId" column="ManualAutoId" jdbcType="BIGINT"/>
			<result property="manualCustomerName" column="ManualCustomerName" jdbcType="VARCHAR"/>
			<result property="manualHouseName" column="ManualHouseName" jdbcType="VARCHAR"/>
			<result property="manualSatelliteCardId" column="ManualSatelliteCardId" jdbcType="BIGINT"/>
			<result property="meterId" column="MeterId" jdbcType="BIGINT"/>
			<result property="usedDate" column="UsedDate" jdbcType="TIMESTAMP"/>
			<result property="userId" column="UserId" jdbcType="BIGINT"/>
			<result property="createUserId" column="CreateUserId" jdbcType="BIGINT"/>
			<result property="createUserName" column="CreateUserName" jdbcType="VARCHAR"/>
			<result property="createTime" column="CreateTime" jdbcType="TIMESTAMP"/>
			<result property="updateUserId" column="UpdateUserId" jdbcType="BIGINT"/>
			<result property="updateUserName" column="UpdateUserName" jdbcType="VARCHAR"/>
			<result property="updateTime" column="UpdateTime" jdbcType="TIMESTAMP"/>
			<result property="isDelete" column="IsDelete" jdbcType="INTEGER"/>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="NsbillBillUsedDetail_Column_List">
		Id,BillUsedId,SubjectCode,Content,ChargeItemId,BusinessId,Amount,Price,BillFund,Remark,OldId,BeginDate,EndDate,ChargeId,CustomerId,Discount,HouseId,ManualAutoId,ManualCustomerName,ManualHouseName,ManualSatelliteCardId,MeterId,UsedDate,UserId,CreateUserId,CreateUserName,CreateTime,UpdateUserId,UpdateUserName,UpdateTime,IsDelete
	</sql>
	
	<select id="listPage" parameterType="com.newsee.common.vo.SearchVo" resultMap="NsbillBillUsedDetailResultMap">
	    select 
	        <include refid="NsbillBillUsedDetail_Column_List" />
	    from 
	       NS_Bill_BillUsedDetail
	    <where>
	        is_deleted = 0
	        <if test="mainSearch != null and mainSearch != ''">
	            and LOCATE(#{mainSearch,jdbcType=VARCHAR}, user_name)>0 
	        </if>
	        <if test="enterpriseId != null">
	            and enterprise_id = #{enterpriseId,jdbcType=BIGINT}
	        </if>
	        <if test="organizationId != null">
	            and organization_id = #{organizationId,jdbcType=BIGINT}
	        </if>
	        <if test="filterList != null">
	            <foreach collection="filterList" item="item">
	               <choose>
	                   <when test="item.comparison != null and item.comparison == 'NULL'">
	                       and (#{item.fieldUnderLineName} IS NULL or #{item.fieldUnderLineName} = '')
	                   </when>
	                   <when test="item.comparison != null and item.comparison == 'NOT_NULL'">
	                       and (#{item.fieldUnderLineName} IS NOT NULL or #{item.fieldUnderLineName} != '')
	                   </when>
	                   <when test="item.comparison != null and item.comparison == 'NOT_LIKE'">
	                       and LOCATE(#{item.fieldValue}, #{item.fieldUnderLineName})=0 
	                   </when>
	                   <when test="item.comparison != null and item.comparison == 'LIKE'">
	                       and LOCATE(#{item.fieldValue}, #{item.fieldUnderLineName})>0
	                   </when>
	                   <when test="item.comparison != null and item.comparison == 'GREATER_THAN'">
	                       and #{item.fieldUnderLineName} &gt; #{item.fieldValue}
	                   </when>
	                   <when test="item.comparison != null and item.comparison == 'LESS_THAN'">
	                       and #{item.fieldUnderLineName} &lt; #{item.fieldValue}
	                   </when>
	                   <when test="item.comparison != null and item.comparison == 'EQUAL'">
	                       and #{item.fieldUnderLineName} = #{item.fieldValue}
	                   </when>
	                   <when test="item.comparison != null and item.comparison == 'NOT_EQUAL'">
	                       and #{item.fieldUnderLineName} != #{item.fieldValue}
	                   </when>
	                   <when test="item.comparison != null and item.comparison == 'GREATER_EQUAL_THAN'">
	                       and #{item.fieldUnderLineName} &gt;= #{item.fieldValue}               
	                   </when>
	                   <when test="item.comparison != null and item.comparison == 'LESS_EQUAL_THAN'">
	                       and #{item.fieldUnderLineName} &lt;= #{item.fieldValue}
	                   </when>
	               </choose>
	            </foreach>
	        </if>
	
	        <if test="orderFieldUnderLineName != null and orderFieldUnderLineName != ''">
	           order by ${orderFieldUnderLineName}
	           <if test="orderBy != null and orderBy != ''">
	              ${orderBy}
	           </if>
	        </if>
	    </where>
	  </select>
	
	<select id="selectById" parameterType="java.lang.Long" resultMap="NsbillBillUsedDetailResultMap">
		select
			<include refid="NsbillBillUsedDetail_Column_List" />
		from
			NS_Bill_BillUsedDetail
		where
			Id = #{id}
	</select>
	
	<update id="updateById" parameterType="com.newsee.bill.entity.NsbillBillUsedDetail">
		update NS_Bill_BillUsedDetail
		<set>
			<if test="billUsedId != null">
			  BillUsedId = #{billUsedId, jdbcType=BIGINT },
			</if>
			<if test="subjectCode != null">
			  SubjectCode = #{subjectCode, jdbcType=VARCHAR },
			</if>
			<if test="content != null">
			  Content = #{content, jdbcType=VARCHAR },
			</if>
			<if test="chargeItemId != null">
			  ChargeItemId = #{chargeItemId, jdbcType=BIGINT },
			</if>
			<if test="businessId != null">
			  BusinessId = #{businessId, jdbcType=BIGINT },
			</if>
			<if test="amount != null">
			  Amount = #{amount, jdbcType=DECIMAL },
			</if>
			<if test="price != null">
			  Price = #{price, jdbcType=DECIMAL },
			</if>
			<if test="billFund != null">
			  BillFund = #{billFund, jdbcType=DECIMAL },
			</if>
			<if test="remark != null">
			  Remark = #{remark, jdbcType=VARCHAR },
			</if>
			<if test="oldId != null">
			  OldId = #{oldId, jdbcType=BIGINT },
			</if>
			<if test="beginDate != null">
			  BeginDate = #{beginDate, jdbcType=TIMESTAMP },
			</if>
			<if test="endDate != null">
			  EndDate = #{endDate, jdbcType=TIMESTAMP },
			</if>
			<if test="chargeId != null">
			  ChargeId = #{chargeId, jdbcType=BIGINT },
			</if>
			<if test="customerId != null">
			  CustomerId = #{customerId, jdbcType=BIGINT },
			</if>
			<if test="discount != null">
			  Discount = #{discount, jdbcType=DECIMAL },
			</if>
			<if test="houseId != null">
			  HouseId = #{houseId, jdbcType=BIGINT },
			</if>
			<if test="manualAutoId != null">
			  ManualAutoId = #{manualAutoId, jdbcType=BIGINT },
			</if>
			<if test="manualCustomerName != null">
			  ManualCustomerName = #{manualCustomerName, jdbcType=VARCHAR },
			</if>
			<if test="manualHouseName != null">
			  ManualHouseName = #{manualHouseName, jdbcType=VARCHAR },
			</if>
			<if test="manualSatelliteCardId != null">
			  ManualSatelliteCardId = #{manualSatelliteCardId, jdbcType=BIGINT },
			</if>
			<if test="meterId != null">
			  MeterId = #{meterId, jdbcType=BIGINT },
			</if>
			<if test="usedDate != null">
			  UsedDate = #{usedDate, jdbcType=TIMESTAMP },
			</if>
			<if test="userId != null">
			  UserId = #{userId, jdbcType=BIGINT },
			</if>
			<if test="createUserId != null">
			  CreateUserId = #{createUserId, jdbcType=BIGINT },
			</if>
			<if test="createUserName != null">
			  CreateUserName = #{createUserName, jdbcType=VARCHAR },
			</if>
			<if test="createTime != null">
			  CreateTime = #{createTime, jdbcType=TIMESTAMP },
			</if>
			<if test="updateUserId != null">
			  UpdateUserId = #{updateUserId, jdbcType=BIGINT },
			</if>
			<if test="updateUserName != null">
			  UpdateUserName = #{updateUserName, jdbcType=VARCHAR },
			</if>
			<if test="updateTime != null">
			  UpdateTime = #{updateTime, jdbcType=TIMESTAMP },
			</if>
			<if test="isDelete != null">
			  IsDelete = #{isDelete, jdbcType=INTEGER },
			</if>
		</set>
		where
			Id = #{id}
	</update>
	
	<delete id="deleteById" parameterType="java.lang.Long">
		delete from NS_Bill_BillUsedDetail 
		where
			Id = #{id}
	</delete>
	
	<delete id="deleteBatch" parameterType="java.util.List">
		delete from NS_Bill_BillUsedDetail
		where
			Id in
		<foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
	   		${item}
        </foreach>
	</delete>
	
	<insert id="insert" useGeneratedKeys="true" keyProperty="id"
		parameterType="com.newsee.bill.entity.NsbillBillUsedDetail">
		insert into NS_Bill_BillUsedDetail
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="billUsedId != null">
				BillUsedId,
			</if>
			<if test="subjectCode != null">
				SubjectCode,
			</if>
			<if test="content != null">
				Content,
			</if>
			<if test="chargeItemId != null">
				ChargeItemId,
			</if>
			<if test="businessId != null">
				BusinessId,
			</if>
			<if test="amount != null">
				Amount,
			</if>
			<if test="price != null">
				Price,
			</if>
			<if test="billFund != null">
				BillFund,
			</if>
			<if test="remark != null">
				Remark,
			</if>
			<if test="oldId != null">
				OldId,
			</if>
			<if test="beginDate != null">
				BeginDate,
			</if>
			<if test="endDate != null">
				EndDate,
			</if>
			<if test="chargeId != null">
				ChargeId,
			</if>
			<if test="customerId != null">
				CustomerId,
			</if>
			<if test="discount != null">
				Discount,
			</if>
			<if test="houseId != null">
				HouseId,
			</if>
			<if test="manualAutoId != null">
				ManualAutoId,
			</if>
			<if test="manualCustomerName != null">
				ManualCustomerName,
			</if>
			<if test="manualHouseName != null">
				ManualHouseName,
			</if>
			<if test="manualSatelliteCardId != null">
				ManualSatelliteCardId,
			</if>
			<if test="meterId != null">
				MeterId,
			</if>
			<if test="usedDate != null">
				UsedDate,
			</if>
			<if test="userId != null">
				UserId,
			</if>
			<if test="createUserId != null">
				CreateUserId,
			</if>
			<if test="createUserName != null">
				CreateUserName,
			</if>
			<if test="createTime != null">
				CreateTime,
			</if>
			<if test="updateUserId != null">
				UpdateUserId,
			</if>
			<if test="updateUserName != null">
				UpdateUserName,
			</if>
			<if test="updateTime != null">
				UpdateTime,
			</if>
			<if test="isDelete != null">
				IsDelete,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="billUsedId != null">
				#{billUsedId, jdbcType=BIGINT},
			</if>
			<if test="subjectCode != null">
				#{subjectCode, jdbcType=VARCHAR},
			</if>
			<if test="content != null">
				#{content, jdbcType=VARCHAR},
			</if>
			<if test="chargeItemId != null">
				#{chargeItemId, jdbcType=BIGINT},
			</if>
			<if test="businessId != null">
				#{businessId, jdbcType=BIGINT},
			</if>
			<if test="amount != null">
				#{amount, jdbcType=DECIMAL},
			</if>
			<if test="price != null">
				#{price, jdbcType=DECIMAL},
			</if>
			<if test="billFund != null">
				#{billFund, jdbcType=DECIMAL},
			</if>
			<if test="remark != null">
				#{remark, jdbcType=VARCHAR},
			</if>
			<if test="oldId != null">
				#{oldId, jdbcType=BIGINT},
			</if>
			<if test="beginDate != null">
				#{beginDate, jdbcType=TIMESTAMP},
			</if>
			<if test="endDate != null">
				#{endDate, jdbcType=TIMESTAMP},
			</if>
			<if test="chargeId != null">
				#{chargeId, jdbcType=BIGINT},
			</if>
			<if test="customerId != null">
				#{customerId, jdbcType=BIGINT},
			</if>
			<if test="discount != null">
				#{discount, jdbcType=DECIMAL},
			</if>
			<if test="houseId != null">
				#{houseId, jdbcType=BIGINT},
			</if>
			<if test="manualAutoId != null">
				#{manualAutoId, jdbcType=BIGINT},
			</if>
			<if test="manualCustomerName != null">
				#{manualCustomerName, jdbcType=VARCHAR},
			</if>
			<if test="manualHouseName != null">
				#{manualHouseName, jdbcType=VARCHAR},
			</if>
			<if test="manualSatelliteCardId != null">
				#{manualSatelliteCardId, jdbcType=BIGINT},
			</if>
			<if test="meterId != null">
				#{meterId, jdbcType=BIGINT},
			</if>
			<if test="usedDate != null">
				#{usedDate, jdbcType=TIMESTAMP},
			</if>
			<if test="userId != null">
				#{userId, jdbcType=BIGINT},
			</if>
			<if test="createUserId != null">
				#{createUserId, jdbcType=BIGINT},
			</if>
			<if test="createUserName != null">
				#{createUserName, jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime, jdbcType=TIMESTAMP},
			</if>
			<if test="updateUserId != null">
				#{updateUserId, jdbcType=BIGINT},
			</if>
			<if test="updateUserName != null">
				#{updateUserName, jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				#{updateTime, jdbcType=TIMESTAMP},
			</if>
			<if test="isDelete != null">
				#{isDelete, jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	
	<insert id="insertBatch" parameterType="java.util.List">
		insert into NS_Bill_BillUsedDetail
		<trim prefix="(" suffix=")" suffixOverrides=",">
			BillUsedId,
			SubjectCode,
			Content,
			ChargeItemId,
			BusinessId,
			Amount,
			Price,
			BillFund,
			Remark,
			OldId,
			BeginDate,
			EndDate,
			ChargeId,
			CustomerId,
			Discount,
			HouseId,
			ManualAutoId,
			ManualCustomerName,
			ManualHouseName,
			ManualSatelliteCardId,
			MeterId,
			UsedDate,
			UserId,
			CreateUserId,
			CreateUserName,
			CreateTime,
			UpdateUserId,
			UpdateUserName,
			UpdateTime,
			IsDelete,
		</trim>
		values
		<foreach collection="list" item="item" index="index" separator=",">
		(
			#{item.billUsedId, jdbcType=BIGINT},
			#{item.subjectCode, jdbcType=VARCHAR},
			#{item.content, jdbcType=VARCHAR},
			#{item.chargeItemId, jdbcType=BIGINT},
			#{item.businessId, jdbcType=BIGINT},
			#{item.amount, jdbcType=DECIMAL},
			#{item.price, jdbcType=DECIMAL},
			#{item.billFund, jdbcType=DECIMAL},
			#{item.remark, jdbcType=VARCHAR},
			#{item.oldId, jdbcType=BIGINT},
			#{item.beginDate, jdbcType=TIMESTAMP},
			#{item.endDate, jdbcType=TIMESTAMP},
			#{item.chargeId, jdbcType=BIGINT},
			#{item.customerId, jdbcType=BIGINT},
			#{item.discount, jdbcType=DECIMAL},
			#{item.houseId, jdbcType=BIGINT},
			#{item.manualAutoId, jdbcType=BIGINT},
			#{item.manualCustomerName, jdbcType=VARCHAR},
			#{item.manualHouseName, jdbcType=VARCHAR},
			#{item.manualSatelliteCardId, jdbcType=BIGINT},
			#{item.meterId, jdbcType=BIGINT},
			#{item.usedDate, jdbcType=TIMESTAMP},
			#{item.userId, jdbcType=BIGINT},
			#{item.createUserId, jdbcType=BIGINT},
			#{item.createUserName, jdbcType=VARCHAR},
			#{item.createTime, jdbcType=TIMESTAMP},
			#{item.updateUserId, jdbcType=BIGINT},
			#{item.updateUserName, jdbcType=VARCHAR},
			#{item.updateTime, jdbcType=TIMESTAMP},
			#{item.isDelete, jdbcType=INTEGER},
        )
        </foreach>
	</insert>
	
</mapper>