<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.newsee.charge.dao.ChargeGoodsTaxMapper">

	<resultMap id="ChargeGoodsTaxResultMap" type="com.newsee.charge.entity.ChargeGoodsTax">
			<id property="id" column="Id" jdbcType="BIGINT"/>
			<result property="enterpriseId" column="EnterpriseId" jdbcType="BIGINT"/>
			<result property="organizationId" column="OrganizationId" jdbcType="BIGINT"/>
			<result property="goodsTaxNo" column="GoodsTaxNo" jdbcType="VARCHAR"/>
			<result property="goodsTaxName" column="GoodsTaxName" jdbcType="VARCHAR"/>
			<result property="createUserId" column="CreateUserId" jdbcType="BIGINT"/>
			<result property="createUserName" column="CreateUserName" jdbcType="VARCHAR"/>
			<result property="createTime" column="CreateTime" jdbcType="TIMESTAMP"/>
			<result property="updateUserId" column="UpdateUserId" jdbcType="BIGINT"/>
			<result property="updateUserName" column="UpdateUserName" jdbcType="VARCHAR"/>
			<result property="updateTime" column="UpdateTime" jdbcType="TIMESTAMP"/>
			<result property="sysTime" column="SysTime" jdbcType="TIMESTAMP"/>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="ChargeGoodsTax_Column_List">
		Id,EnterpriseId,OrganizationId,GoodsTaxNo,GoodsTaxName,CreateUserId,CreateUserName,CreateTime,UpdateUserId,UpdateUserName,UpdateTime,SysTime
	</sql>
	
	<select id="listPage" parameterType="com.newsee.common.vo.SearchVo" resultMap="ChargeGoodsTaxResultMap">
	    select 
	        <include refid="ChargeGoodsTax_Column_List" />
	    from 
	       Charge_GoodsTax
	    <where>
			IsDelete = 0
	        <if test="mainSearch != null and mainSearch != ''">
	            and LOCATE(#{mainSearch,jdbcType=VARCHAR}, GoodsTaxName)>0 
	        </if>
	        <if test="enterpriseId != null">
	            and EnterpriseId = #{enterpriseId,jdbcType=BIGINT}
	        </if>
	        <!-- <if test="organizationId != null">
	            and OrganizationId = #{organizationId,jdbcType=BIGINT}
	        </if>-->
	        <if test="filterList != null">
	            <foreach collection="filterList" item="item">
	               <choose>
	                   <when test="item.comparison != null and item.comparison == 'NULL'">
	                       and (${item.fieldName} IS NULL or ${item.fieldName} = '')
	                   </when>
	                   <when test="item.comparison != null and item.comparison == 'NOT_NULL'">
	                       and (${item.fieldName} IS NOT NULL and ${item.fieldName} != '')
	                   </when>
	                   <when test="item.comparison != null and item.comparison == 'NOT_LIKE'">
	                       and LOCATE(#{item.fieldValue}, ${item.fieldName})=0
	                   </when>
	                   <when test="item.comparison != null and item.comparison == 'LIKE'">
	                       and LOCATE(#{item.fieldValue}, ${item.fieldName})>0
	                   </when>
	                   <when test="item.comparison != null and item.comparison == 'GREATER_THAN'">
	                       and ${item.fieldName} &gt; #{item.fieldValue}
	                   </when>
	                   <when test="item.comparison != null and item.comparison == 'LESS_THAN'">
	                       and ${item.fieldName} &lt; #{item.fieldValue}
	                   </when>
	                   <when test="item.comparison != null and item.comparison == 'EQUAL' and item.type!='date'">
	                       and ${item.fieldName} = #{item.fieldValue}
	                   </when>
					   <when test="item.comparison != null and item.comparison == 'EQUAL' and item.type == 'date'">
						   and to_days(${item.fieldName}) = to_days(#{item.fieldValue})
	                   </when>
	                   <when test="item.comparison != null and item.comparison == 'NOT_EQUAL'">
	                       and ${item.fieldName} != #{item.fieldValue}
	                   </when>
	                   <when test="item.comparison != null and item.comparison == 'GREATER_EQUAL_THAN' and item.type!='date'">
	                       and ${item.fieldName} &gt;= #{item.fieldValue}
	                   </when>
					   <when test="item.comparison != null and item.comparison == 'GREATER_EQUAL_THAN' and item.type == 'date'">
	                       and to_days(${item.fieldName}) >= to_days(#{item.fieldValue})
	                   </when>
	                   <when test="item.comparison != null and item.comparison == 'LESS_EQUAL_THAN' and item.type!='date'">
	                       and ${item.fieldName} &lt;= #{item.fieldValue}
	                   </when>
					   <when test="item.comparison != null and item.comparison == 'LESS_EQUAL_THAN' and item.type == 'date'">
	                       and to_days(${item.fieldName}) &lt;= to_days(#{item.fieldValue})
	                   </when>
	               </choose>
	            </foreach>
	        </if>
	         order by id desc
	        <if test="orderFieldUnderLineName != null and orderFieldUnderLineName != ''">
	            ,${orderFieldName}
	           <if test="orderBy != null and orderBy != ''">
	              ${orderBy}
	           </if>
	        </if>
	    </where>
	  </select>
	
	<select id="selectById" parameterType="java.lang.Long" resultMap="ChargeGoodsTaxResultMap">
		select
			<include refid="ChargeGoodsTax_Column_List" />
		from
			Charge_GoodsTax
		where
			Id = #{id}
	</select>
	
	<select id="selectByIds" parameterType="java.util.List" resultMap="ChargeGoodsTaxResultMap">
		select
			<include refid="ChargeGoodsTax_Column_List" />
		from
			Charge_GoodsTax
		where
			Id in
		<foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
	   		${item}
        </foreach>
	</select>
	
	<select id="selectByCode" parameterType="java.util.Map" resultMap="ChargeGoodsTaxResultMap">
		select
			<include refid="ChargeGoodsTax_Column_List" />
		from
			Charge_GoodsTax
		where
		EnterpriseId = #{enterpriseId}
		AND GoodsTaxNo = #{goodsTaxNo}
		AND IsDelete =0
	</select>

	<select id="selectByCodeOrName" parameterType="java.util.Map" resultMap="ChargeGoodsTaxResultMap">
		select
			<include refid="ChargeGoodsTax_Column_List" />
		from
			Charge_GoodsTax
		where
		EnterpriseId = #{enterpriseId}
		and ( LOCATE(#{goodsTaxNo}, GoodsTaxNo)>0 or LOCATE(#{goodsTaxNo}, GoodsTaxName)>0 )
		AND IsDelete =0
	</select>

	<select id="searchByCode" parameterType="java.util.Map" resultMap="ChargeGoodsTaxResultMap">
		select
		<include refid="ChargeGoodsTax_Column_List" />
		from
		Charge_GoodsTax
		where
		EnterpriseId = #{enterpriseId}
		and LOCATE(#{goodsTaxNo}, GoodsTaxNo)>0
		AND IsDelete =0
	</select>
	
	<update id="updateById" parameterType="com.newsee.charge.entity.ChargeGoodsTax">
		update Charge_GoodsTax
		<set>
			<if test="enterpriseId != null">
			  EnterpriseId = #{enterpriseId, jdbcType=BIGINT },
			</if>
			<if test="organizationId != null">
			  OrganizationId = #{organizationId, jdbcType=BIGINT },
			</if>
			<if test="goodsTaxNo != null">
			  GoodsTaxNo = #{goodsTaxNo, jdbcType=VARCHAR },
			</if>
			<if test="goodsTaxName != null">
			  GoodsTaxName = #{goodsTaxName, jdbcType=VARCHAR },
			</if>
			<if test="createUserId != null">
			  CreateUserId = #{createUserId, jdbcType=BIGINT },
			</if>
			<if test="createUserName != null">
			  CreateUserName = #{createUserName, jdbcType=VARCHAR },
			</if>
			<if test="createTime != null">
			  CreateTime = #{createTime, jdbcType=TIMESTAMP },
			</if>
			<if test="updateUserId != null">
			  UpdateUserId = #{updateUserId, jdbcType=BIGINT },
			</if>
			<if test="updateUserName != null">
			  UpdateUserName = #{updateUserName, jdbcType=VARCHAR },
			</if>
			<if test="updateTime != null">
			  UpdateTime = #{updateTime, jdbcType=TIMESTAMP },
			</if>
			<if test="sysTime != null">
			  SysTime = #{sysTime, jdbcType=TIMESTAMP },
			</if>
		</set>
		where
			Id = #{id}
	</update>
	
	<delete id="deleteById" parameterType="java.lang.Long">
		update Charge_GoodsTax set IsDelete = 1 where Id = #{id}
	</delete>
	
	<delete id="deleteBatch" parameterType="java.util.List">
		update Charge_GoodsTax set isDelete = 1
		where
			Id in
		<foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
	   		${item}
        </foreach>
	</delete>
	
	<insert id="insert" useGeneratedKeys="true" keyProperty="id"
		parameterType="com.newsee.charge.entity.ChargeGoodsTax">
		insert into Charge_GoodsTax
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="enterpriseId != null">
				EnterpriseId,
			</if>
			<if test="organizationId != null">
				OrganizationId,
			</if>
			<if test="goodsTaxNo != null">
				GoodsTaxNo,
			</if>
			<if test="goodsTaxName != null">
				GoodsTaxName,
			</if>
			<if test="createUserId != null">
				CreateUserId,
			</if>
			<if test="createUserName != null">
				CreateUserName,
			</if>
			<if test="createTime != null">
				CreateTime,
			</if>
			<if test="updateUserId != null">
				UpdateUserId,
			</if>
			<if test="updateUserName != null">
				UpdateUserName,
			</if>
			<if test="updateTime != null">
				UpdateTime,
			</if>
			<if test="sysTime != null">
				SysTime,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="enterpriseId != null">
				#{enterpriseId, jdbcType=BIGINT},
			</if>
			<if test="organizationId != null">
				#{organizationId, jdbcType=BIGINT},
			</if>
			<if test="goodsTaxNo != null">
				#{goodsTaxNo, jdbcType=VARCHAR},
			</if>
			<if test="goodsTaxName != null">
				#{goodsTaxName, jdbcType=VARCHAR},
			</if>
			<if test="createUserId != null">
				#{createUserId, jdbcType=BIGINT},
			</if>
			<if test="createUserName != null">
				#{createUserName, jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime, jdbcType=TIMESTAMP},
			</if>
			<if test="updateUserId != null">
				#{updateUserId, jdbcType=BIGINT},
			</if>
			<if test="updateUserName != null">
				#{updateUserName, jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				#{updateTime, jdbcType=TIMESTAMP},
			</if>
			<if test="sysTime != null">
				#{sysTime, jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	
	<insert id="insertBatch" parameterType="java.util.List">
		insert into Charge_GoodsTax
		<trim prefix="(" suffix=")" suffixOverrides=",">
			EnterpriseId,
			OrganizationId,
			GoodsTaxNo,
			GoodsTaxName,
			CreateUserId,
			CreateUserName,
			CreateTime,
			UpdateUserId,
			UpdateUserName,
			UpdateTime,
			SysTime,
		</trim>
		values
		<foreach collection="list" item="item" index="index" separator=",">
		(
			#{item.enterpriseId, jdbcType=BIGINT},
			#{item.organizationId, jdbcType=BIGINT},
			#{item.goodsTaxNo, jdbcType=VARCHAR},
			#{item.goodsTaxName, jdbcType=VARCHAR},
			#{item.createUserId, jdbcType=BIGINT},
			#{item.createUserName, jdbcType=VARCHAR},
			#{item.createTime, jdbcType=TIMESTAMP},
			#{item.updateUserId, jdbcType=BIGINT},
			#{item.updateUserName, jdbcType=VARCHAR},
			#{item.updateTime, jdbcType=TIMESTAMP},
			#{item.sysTime, jdbcType=TIMESTAMP},
        )
        </foreach>
	</insert>
	
</mapper>