<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.newsee.charge.dao.ChargeGoodsTaxNumberMapper">

	<resultMap id="ChargeGoodsTaxNumberResultMap" type="com.newsee.charge.entity.ChargeGoodsTaxNumber">
			<id property="id" column="Id" jdbcType="BIGINT"/>
			<result property="enterpriseId" column="EnterpriseId" jdbcType="BIGINT"/>
			<result property="organizationId" column="OrganizationId" jdbcType="BIGINT"/>
			<result property="organizationName" column="OrganizationName" jdbcType="VARCHAR"/>
			<result property="companyName" column="CompanyName" jdbcType="VARCHAR"/>
			<result property="companyTaxNumber" column="CompanyTaxNumber" jdbcType="VARCHAR"/>
			<result property="address" column="Address" jdbcType="VARCHAR"/>
			<result property="phoneNumber" column="PhoneNumber" jdbcType="VARCHAR"/>
			<result property="bankName" column="BankName" jdbcType="VARCHAR"/>
			<result property="bankAccount" column="BankAccount" jdbcType="VARCHAR"/>
			<result property="ticketServerId" column="TicketServerId" jdbcType="VARCHAR"/>
			<result property="ticketServerKey" column="TicketServerKey" jdbcType="VARCHAR"/>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="ChargeGoodsTaxNumber_Column_List">
		Id,EnterpriseId,OrganizationId,OrganizationName,CompanyName,CompanyTaxNumber,Address,PhoneNumber,BankName,BankAccount,TicketServerId,TicketServerKey,CreateUserId,CreateUserName,CreateTime,UpdateUserId,UpdateUserName,UpdateTime,SysTime
	</sql>
	
	<select id="listPage" parameterType="com.newsee.common.vo.SearchVo" resultMap="ChargeGoodsTaxNumberResultMap">
	    select 
	        <include refid="ChargeGoodsTaxNumber_Column_List" />
	    from 
	       Charge_GoodsTaxNumber
	    <where>
	        IsDelete = 0
	        <if test="mainSearch != null and mainSearch != ''">
	            and LOCATE(#{mainSearch,jdbcType=VARCHAR}, user_name)>0 
	        </if>
	        <if test="enterpriseId != null">
	            and enterprise_id = #{enterpriseId,jdbcType=BIGINT}
	        </if>
	        <if test="organizationId != null">
	            and organization_id = #{organizationId,jdbcType=BIGINT}
	        </if>
	        <if test="filterList != null">
	            <foreach collection="filterList" item="item">
	               <choose>
	                   <when test="item.comparison != null and item.comparison == 'NULL'">
	                       and (#{item.fieldUnderLineName} IS NULL or #{item.fieldUnderLineName} = '')
	                   </when>
	                   <when test="item.comparison != null and item.comparison == 'NOT_NULL'">
	                       and (#{item.fieldUnderLineName} IS NOT NULL or #{item.fieldUnderLineName} != '')
	                   </when>
	                   <when test="item.comparison != null and item.comparison == 'NOT_LIKE'">
	                       and LOCATE(#{item.fieldValue}, #{item.fieldUnderLineName})=0 
	                   </when>
	                   <when test="item.comparison != null and item.comparison == 'LIKE'">
	                       and LOCATE(#{item.fieldValue}, #{item.fieldUnderLineName})>0
	                   </when>
	                   <when test="item.comparison != null and item.comparison == 'GREATER_THAN'">
	                       and #{item.fieldUnderLineName} &gt; #{item.fieldValue}
	                   </when>
	                   <when test="item.comparison != null and item.comparison == 'LESS_THAN'">
	                       and #{item.fieldUnderLineName} &lt; #{item.fieldValue}
	                   </when>
	                   <when test="item.comparison != null and item.comparison == 'EQUAL'">
	                       and #{item.fieldUnderLineName} = #{item.fieldValue}
	                   </when>
	                   <when test="item.comparison != null and item.comparison == 'NOT_EQUAL'">
	                       and #{item.fieldUnderLineName} != #{item.fieldValue}
	                   </when>
	                   <when test="item.comparison != null and item.comparison == 'GREATER_EQUAL_THAN'">
	                       and #{item.fieldUnderLineName} &gt;= #{item.fieldValue}               
	                   </when>
	                   <when test="item.comparison != null and item.comparison == 'LESS_EQUAL_THAN'">
	                       and #{item.fieldUnderLineName} &lt;= #{item.fieldValue}
	                   </when>
	               </choose>
	            </foreach>
	        </if>
	         order by id desc
	        <if test="orderFieldUnderLineName != null and orderFieldUnderLineName != ''">
	           ,${orderFieldUnderLineName}
	           <if test="orderBy != null and orderBy != ''">
	              ${orderBy}
	           </if>
	        </if>
	    </where>
	  </select>
	
	<select id="selectById" parameterType="java.lang.Long" resultMap="ChargeGoodsTaxNumberResultMap">
		select
			<include refid="ChargeGoodsTaxNumber_Column_List" />
		from
			Charge_GoodsTaxNumber
		where
			Id = #{id}
	</select>
	
	<select id="selectByOrganizationId" parameterType="java.util.Map" resultMap="ChargeGoodsTaxNumberResultMap">
		select
			<include refid="ChargeGoodsTaxNumber_Column_List" />
		from
			Charge_GoodsTaxNumber
		where
			OrganizationId = #{organizationId}
			AND EnterpriseId = #{enterpriseId}
			AND IsDelete = 0
	</select>
	
	<update id="updateById" parameterType="com.newsee.charge.entity.ChargeGoodsTaxNumber">
		update Charge_GoodsTaxNumber
		<set>
			<if test="enterpriseId != null">
			  EnterpriseId = #{enterpriseId, jdbcType=BIGINT },
			</if>
			<if test="organizationId != null">
			  OrganizationId = #{organizationId, jdbcType=BIGINT },
			</if>
			<if test="organizationName != null">
			  OrganizationName = #{organizationName, jdbcType=VARCHAR },
			</if>
			<if test="companyName != null">
			  CompanyName = #{companyName, jdbcType=VARCHAR },
			</if>
			<if test="companyTaxNumber != null">
			  CompanyTaxNumber = #{companyTaxNumber, jdbcType=VARCHAR },
			</if>
			<if test="address != null">
			  Address = #{address, jdbcType=VARCHAR },
			</if>
			<if test="phoneNumber != null">
			  PhoneNumber = #{phoneNumber, jdbcType=VARCHAR },
			</if>
			<if test="bankName != null">
			  BankName = #{bankName, jdbcType=VARCHAR },
			</if>
			<if test="bankAccount != null">
			  BankAccount = #{bankAccount, jdbcType=VARCHAR },
			</if>
			<if test="ticketServerId != null">
			  TicketServerId = #{ticketServerId, jdbcType=VARCHAR },
			</if>
			<if test="ticketServerKey != null">
			  TicketServerKey = #{ticketServerKey, jdbcType=VARCHAR },
			</if>
			<if test="createUserId != null">
				CreateUserId = #{createUserId, jdbcType=BIGINT },
			</if>
			<if test="createUserName != null">
				CreateUserName = #{createUserName, jdbcType=VARCHAR },
			</if>
			<if test="createTime != null">
				CreateTime = #{createTime, jdbcType=TIMESTAMP },
			</if>
			<if test="updateUserId != null">
				UpdateUserId = #{updateUserId, jdbcType=BIGINT },
			</if>
			<if test="updateUserName != null">
				UpdateUserName = #{updateUserName, jdbcType=VARCHAR },
			</if>
			<if test="updateTime != null">
				UpdateTime = #{updateTime, jdbcType=TIMESTAMP },
			</if>
			<if test="sysTime != null">
				SysTime = #{sysTime, jdbcType=TIMESTAMP },
			</if>
			<if test="isDelete != null">
				IsDelete = #{isDelete, jdbcType=BIGINT },
			</if>
		</set>
		where
			Id = #{id}
	</update>
	
	<delete id="deleteById" parameterType="java.lang.Long">
		update Charge_GoodsTaxNumber
		set IsDelete = 1
		where
			Id = #{id}
	</delete>
	
	<delete id="deleteBatch" parameterType="java.util.List">
		update Charge_GoodsTaxNumber
		set IsDelete = 1
		where
			Id in
		<foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
	   		${item}
        </foreach>
	</delete>
	
	<insert id="insert" useGeneratedKeys="true" keyProperty="id"
		parameterType="com.newsee.charge.entity.ChargeGoodsTaxNumber">
		insert into Charge_GoodsTaxNumber
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="enterpriseId != null">
				EnterpriseId,
			</if>
			<if test="organizationId != null">
				OrganizationId,
			</if>
			<if test="organizationName != null">
				OrganizationName,
			</if>
			<if test="companyName != null">
				CompanyName,
			</if>
			<if test="companyTaxNumber != null">
				CompanyTaxNumber,
			</if>
			<if test="address != null">
				Address,
			</if>
			<if test="phoneNumber != null">
				PhoneNumber,
			</if>
			<if test="bankName != null">
				BankName,
			</if>
			<if test="bankAccount != null">
				BankAccount,
			</if>
			<if test="ticketServerId != null">
				TicketServerId,
			</if>
			<if test="ticketServerKey != null">
				TicketServerKey,
			</if>
			<if test="createUserId != null">
				CreateUserId,
			</if>
			<if test="createUserName != null">
				CreateUserName,
			</if>
			<if test="createTime != null">
				CreateTime,
			</if>
			<if test="updateUserId != null">
				UpdateUserId,
			</if>
			<if test="updateUserName != null">
				UpdateUserName,
			</if>
			<if test="updateTime != null">
				UpdateTime,
			</if>
			<if test="sysTime != null">
				SysTime,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="enterpriseId != null">
				#{enterpriseId, jdbcType=BIGINT},
			</if>
			<if test="organizationId != null">
				#{organizationId, jdbcType=BIGINT},
			</if>
			<if test="organizationName != null">
				#{organizationName, jdbcType=VARCHAR},
			</if>
			<if test="companyName != null">
				#{companyName, jdbcType=VARCHAR},
			</if>
			<if test="companyTaxNumber != null">
				#{companyTaxNumber, jdbcType=VARCHAR},
			</if>
			<if test="address != null">
				#{address, jdbcType=VARCHAR},
			</if>
			<if test="phoneNumber != null">
				#{phoneNumber, jdbcType=VARCHAR},
			</if>
			<if test="bankName != null">
				#{bankName, jdbcType=VARCHAR},
			</if>
			<if test="bankAccount != null">
				#{bankAccount, jdbcType=VARCHAR},
			</if>
			<if test="ticketServerId != null">
				#{ticketServerId, jdbcType=VARCHAR},
			</if>
			<if test="ticketServerKey != null">
				#{ticketServerKey, jdbcType=VARCHAR},
			</if>
			<if test="createUserId != null">
				#{createUserId, jdbcType=BIGINT},
			</if>
			<if test="createUserName != null">
				#{createUserName, jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime, jdbcType=TIMESTAMP},
			</if>
			<if test="updateUserId != null">
				#{updateUserId, jdbcType=BIGINT},
			</if>
			<if test="updateUserName != null">
				#{updateUserName, jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				#{updateTime, jdbcType=TIMESTAMP},
			</if>
			<if test="sysTime != null">
				#{sysTime, jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	
	<insert id="insertBatch" parameterType="java.util.List">
		insert into Charge_GoodsTaxNumber
		<trim prefix="(" suffix=")" suffixOverrides=",">
			EnterpriseId,
			OrganizationId,
			OrganizationName,
			CompanyName,
			CompanyTaxNumber,
			Address,
			PhoneNumber,
			BankName,
			BankAccount,
			TicketServerId,
			TicketServerKey,
		</trim>
		values
		<foreach collection="list" item="item" index="index" separator=",">
		(
			#{item.enterpriseId, jdbcType=BIGINT},
			#{item.organizationId, jdbcType=BIGINT},
			#{item.organizationName, jdbcType=VARCHAR},
			#{item.companyName, jdbcType=VARCHAR},
			#{item.companyTaxNumber, jdbcType=VARCHAR},
			#{item.address, jdbcType=VARCHAR},
			#{item.phoneNumber, jdbcType=VARCHAR},
			#{item.bankName, jdbcType=VARCHAR},
			#{item.bankAccount, jdbcType=VARCHAR},
			#{item.ticketServerId, jdbcType=VARCHAR},
			#{item.ticketServerKey, jdbcType=VARCHAR},
        )
        </foreach>
	</insert>
	
</mapper>